[{"/Users/a.b.a/Assignment-8/assign5-react/src/index.js":"1","/Users/a.b.a/Assignment-8/assign5-react/src/reportWebVitals.js":"2","/Users/a.b.a/Assignment-8/assign5-react/src/App.js":"3","/Users/a.b.a/Assignment-8/assign5-react/src/components/Table.js":"4","/Users/a.b.a/Assignment-8/assign5-react/src/components/TableRow.js":"5","/Users/a.b.a/Assignment-8/assign5-react/src/components/TableCell.js":"6"},{"size":500,"mtime":1610706035211,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1610706035213,"results":"9","hashOfConfig":"8"},{"size":6698,"mtime":1610720371153,"results":"10","hashOfConfig":"8"},{"size":1083,"mtime":1610716463771,"results":"11","hashOfConfig":"8"},{"size":606,"mtime":1610716459922,"results":"12","hashOfConfig":"8"},{"size":582,"mtime":1610716461871,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ug8j65",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"23"},"/Users/a.b.a/Assignment-8/assign5-react/src/index.js",[],"/Users/a.b.a/Assignment-8/assign5-react/src/reportWebVitals.js",[],"/Users/a.b.a/Assignment-8/assign5-react/src/App.js",["30"],"/Users/a.b.a/Assignment-8/assign5-react/src/components/Table.js",["31","32","33"],"import React, { Component } from \"react\";\n\nimport TableRow from \"./TableRow\";\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color:this.props.color,\n      row: this.props.row,\n      column: this.props.row\n    };\n    // this.handleAddEvent = this.handleAddEvent.bind(this);\n  }\n\n  componentDidUpdate() {\n    if (\n      // if the props and state are different, update the state\n      this.props.column != this.state.column ||\n      this.props.row != this.state.row ||\n      this.props.color != this.state.color \n    ) {\n      this.setState({ row: this.props.row, column: this.props.column, color: this.props.color});\n    }\n  }\n\n  render() {\n    let tableRows = [];\n    for (let i = 0; i < this.state.row; i++) {\n      tableRows.push(<TableRow column={this.state.column}  color={this.state.color}/>);\n    } // this for loop is for pushing all of the rows into an array, so I can render it.\n    return (\n      <table>\n        <tbody>{tableRows}</tbody>\n      </table>\n    );\n  }\n\n  // <table id=\"table\"></table>\n}\nexport default Table;",["34","35"],"/Users/a.b.a/Assignment-8/assign5-react/src/components/TableRow.js",["36"],"import React, { Component } from \"react\";\nimport TableCell from \"./TableCell\";\n\nclass TableRow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color:this.props.color,\n    };\n  }\n  componentDidUpdate() {\n    if (\n      this.props.color != this.state.color \n    ) {\n      this.setState({ color: this.props.color});\n    }\n  }\n\n  render() {\n    let tableCells = []; // pushing the columns\n    for (let i = 0; i < this.props.column; i++) {\n      tableCells.push(<TableCell color={this.state.color} />);\n    }\n    return <tr>{tableCells}</tr>;\n  }\n}\nexport default TableRow;","/Users/a.b.a/Assignment-8/assign5-react/src/components/TableCell.js",["37"],"import React, { Component } from \"react\";\n\nclass TableCell extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            color:this.props.color,\n        };\n        //this.handleColor = this.handleColor.bind(this);\n    }\n\n    handleColor=()=> {\n        if (this.props.color != this.state.color ) {\n          this.setState({ color: this.props.color});\n        }\n    }\n\n    render() {\n        return(\n        <td style={{ backgroundColor: this.state.color}} \n        onClick={this.handleColor}></td>\n        )\n    }\n}\n\nexport default TableCell;",{"ruleId":"38","severity":1,"message":"39","line":193,"column":11,"nodeType":"40","endLine":193,"endColumn":30},{"ruleId":"41","severity":1,"message":"42","line":19,"column":25,"nodeType":"43","messageId":"44","endLine":19,"endColumn":27},{"ruleId":"41","severity":1,"message":"42","line":20,"column":22,"nodeType":"43","messageId":"44","endLine":20,"endColumn":24},{"ruleId":"41","severity":1,"message":"42","line":21,"column":24,"nodeType":"43","messageId":"44","endLine":21,"endColumn":26},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"41","severity":1,"message":"42","line":13,"column":24,"nodeType":"43","messageId":"44","endLine":13,"endColumn":26},{"ruleId":"41","severity":1,"message":"42","line":14,"column":30,"nodeType":"43","messageId":"44","endLine":14,"endColumn":32},"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-global-assign","no-unsafe-negation"]